name: deskconnd
version: git
summary: Secure, cross-platform IPC on the network
description: |
  Secure, cross-platform IPC on the network

  * Communication over WAMP
  * Supports multiple programming languages
  * End-to-end encryption by default

  https://github.com/deskconn/deskconnd

grade: stable
confinement: strict
base: core18

architectures:
  - build-on: amd64
    run-on: amd64

  - build-on: i386
    run-on: i386

  - build-on: armhf
    run-on: armhf

  - build-on: arm64
    run-on: arm64

environment:
  PYTHONPYCACHEPREFIX: $SNAP_DATA/pycache
  PATH: $PATH:$SNAP/usr/bin:$SNAP/bin
  PYTHONPATH: $PYTHONPATH:$SNAP/lib/python3.8/site-packages

parts:
  py38:
    plugin: nil
    stage-packages:
      - python3.8
    build-packages:
      - wget
      - python3.8
      - python3.8-dev
      - python3.8-venv
      - python3.8-distutils
    override-build: |
      snapcraftctl build
      wget -O - https://bootstrap.pypa.io/get-pip.py | /usr/bin/python3.8 -u
  deskconn:
    plugin: nil
    source: .
    after:
      - py38
    override-build: |
      snapcraftctl build
      # Build and install Crossbar
      export MAKEFLAGS="-j$(nproc)"
      /usr/bin/python3.8 -m pip install --ignore-installed -U --no-compile --prefix $SNAPCRAFT_PART_INSTALL .
      rm -r $SNAPCRAFT_PART_INSTALL/lib/python3.8/site-packages/numpy
      find $SNAPCRAFT_PART_INSTALL -type f -name *.so -exec strip -s {} \;
    stage-packages:
      # Required by Crossbar
      - libsnappy1v5
      - libunwind8
    build-packages:
      - build-essential
      - gcc
      - libffi-dev
      - libssl-dev
      - make
      - libbz2-dev
      - libsnappy-dev
      - libunwind-dev
  launchers:
    plugin: dump
    source: .
    prime:
      - cli.py
      - scripts/daemon.sh
      - .crossbar.yaml
    stage:
      - cli.py
      - scripts/daemon.sh
      - .crossbar.yaml

apps:
  deskconnd:
    command: scripts/daemon.sh
    daemon: simple
    restart-condition: always
    plugs:
      - network
      - network-bind
  deskconnctl:
    command: cli.py
    plugs:
      - network
      - network-bind

slots:
  runtime:
    interface: content
    content: runtime
    read:
      - $SNAP
  state:
    interface: content
    content: state
    read:
      - $SNAP_COMMON/state
